create or replace function getgst(amount number)
return number
as
tax number(10,2):=0;
begin
tax:=amount*0.05;
return tax;
end;


select getgst(100) from dual;

------------------------------------------------------------------------
create or replace function gettax(amount number,prov char)
return number
as
tax number(10,2):=0;
begin
if (prov='ab') then
    tax:=amount*0.05;
elsif (prov='bc') then
    tax:=amount*0.12;
else
    tax:=amount*0.10;
end if;
return tax;
end;


select gettax(100, 'ab') from dual;

--------------------------------------------------------------------------

create or replace function gradeit(grade number)
return char
as
letter char;
begin
if (grade>=90 and grade<=100) then
   letter:='A';
elsif (grade>=80) then
   letter:='B';
elsif (grade between 70 and 79) then
   letter:='C';
elsif (grade>=60) then
   letter:='D';
else
   letter:='F';
end if;
return letter;
end;

select gradeit(85) from dual;

------------------------------------------------------------------------------
create or replace function getcom(sales number)
return number
as
com number(10,2);
begin
if (sales<=1500) then
   com:=0;
elsif (sales>1500 and sales<=6500) then
   com:=(sales-1500)*0.20;
else
   com:=(sales-6500)*0.25 + 5000 * 0.20;
end if;
return com;
end;


-------------------------------------------------------------------------------

create or replace function tottax(amount number)
return number
as
provtax number(10,2):=0;
fedtax number(10,2):=0;
begin
if (amount<100) then
   fedtax:=0.07*amount;
else
   provtax:=0.08*amount;
   fedtax:=0.07*(amount+provtax);
end if;
return fedtax+provtax;
end;


----------------------------------------------------------------------------------
create or replace function fact2(x number)
return number
as
begin
if (x=1) then
  return 1;
else
  return x*fact2(x-1);
end if;
end;


---------------------------------------------------------------------------------
create or replace function fact(x number)
return number
as
total number(6):=1;
begin
for y in 1..x loop
   total:=total*y;
end loop;
return total;
end;


------------------------------------------------------------------------------------

create or replace function gettot(sizex char)
return number
as
total number(10);
begin
select sum(inv_qoh) into total from inventory
where upper(inv_size)=upper(sizex);
return total;
end;

-------------------------------------------------------------------------------------

create or replace function getphone(id number)
return varchar2
as
phone varchar2(10);
begin
select c_dphone into phone from customer
where c_id=id;
return phone;
end;

----------------------------------------------------------------------------------

create or replace function getphone(id number)
return varchar2
as
phone varchar2(10);
nicephone varchar2(14);
begin
select c_dphone into phone from customer
where c_id=id;
nicephone:='('||substr(phone,1,3)||') '||substr(phone,4,3)||
            '-'||substr(phone,7,4);
return nicephone;
end;


-------------------------------------------------------------------------------

create or replace function getlast(id number)
return date
as
lastdate date;
begin
select max(o_date) into lastdate from orders
where c_id=id;
return lastdate;
end;


---------------------------------------------------------------------------

create or replace function count_color(id number)
return number
as
counter number(6);
begin
select count(distinct color) into counter
from item natural join inventory
where cat_id=id;
return counter;
end;

---------------------------------------------------------------------------

create or replace function getavg(sizex char)
return number
as
average number(5,1);
begin
select avg(ol_quantity) into average
from order_line natural join inventory
where upper(inv_size)=upper(sizex);
return average;
end;


----------------------------------------------------------------------------

create or replace function getship(id number)
return number
as
total number(10,2);
begin
select sum(inv_price*sl_quantity) into total
from ((orders natural join order_line) natural join inventory)
natural join shipment_line
where c_id=id;
return total;
end;
/
